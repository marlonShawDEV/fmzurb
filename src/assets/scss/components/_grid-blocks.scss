.grid-block-flex-wrapper {
  display: flex;
  flex-wrap: wrap;
  max-width: 100%;
}
.grid-block-flex {
  position: relative; 
  font-weight: $global-weight-normal;  
  margin-bottom: $gutter;
  flex: 1 1 100%;
  display: flex;
  flex-wrap: nowrap;
  flex-direction: row;
  align-content: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -ms-flex-pack: center;
  justify-content: center; 
  min-height: rem-calc(150);
  @include breakpoint(large) {
    min-height: rem-calc(320);
  }
  @include breakpoint(xlarge) {
    min-height: rem-calc(300);
  }
  .caret-in {
    position: absolute;  
    &::after {
      content: '';
      display: block;
      width: 20px;
      height: 20px; 
      position: absolute;
      transform: rotate(45deg);
      background-color: inherit;
      z-index: 200;
    }
  } 
  .twin-block {
    flex: 1 1 100%;
    display: flex;
    position: relative; 
    align-content: center;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: center;
    justify-content: center;
    &:nth-of-type(odd) {
      padding: 0 $gutter/2 0 0;
      background: rgba($black, 0.1);      
      .caret-in {
        right: 0;
        &::after {
          right: -10px; 
        }
      }  
    }
    &:nth-of-type(even) {
      padding: 0 0 0 $gutter/2;
      .caret-in {
        left: 0;
        &::after {
          left: -10px; 
        }
      }  
    }
    .callout { 
      margin: 0;
    }
  }  
  &.medium-reverse-order {
    .twin-block {      
      &:nth-of-type(odd) {
        @include breakpoint(medium) {
          padding: 0 0 0 $gutter/2;
          order: 2; 
        }        
      }
      &:nth-of-type(even) {
        @include breakpoint(medium) {
          padding: 0 $gutter/2 0 0;
          order: 1; 
          .caret-in {
            right: 0;
            &::after {
              left: auto;
              right: -10px; 
            }
          } 
        }                
      } 
    }    
  }
  &.stack-for-small {
    @include breakpoint(small only) {
      flex-wrap: wrap;
    }
    .twin-block { 
      @include breakpoint(small only) {      
        &:nth-of-type(odd) {
          padding: 0 0 $gutter/4;
        }
        &:nth-of-type(even) {
          padding: 0;
        }
        .caret-in { 
          left: 50%;
          top: 0;
          &::after {
            top: -10px; 
            left: -10px;
          }
        }
      }      
    }
  }
}
.caret-upside::after,
.caret-downside::after,
.caret-leftside::after,
.caret-rightside::after {
  content: '';
  display: block;
  width: 20px;
  height: 20px; 
  position: absolute;
  transform: rotate(45deg);
  background-color: inherit;
  z-index: 200;
  opacity: inherit;
}

.caret-downside,
.caret-upside {
  background-color: inherit;
  left: 0;
  right: 0;
  text-align: center;
  position: absolute;
}

.caret-upside {
  top: 0;
  &::after {
    top: -10px;
    right: 0;
    left: 0;
    margin: 0 auto;
  }
}
.caret-downside {
  bottom: 0;
  &::after {
    bottom: -10px;
    right: 0;
    left: 0;
    margin: 0 auto;
  }
}
.caret-rightside,
.caret-leftside  {
  background-color: inherit;
  position: absolute;
  vertical-align: middle;  
  top: calc(50% - 10px);
}
.caret-leftside {
  left: 0;
  &::after {
    left: -10px;
  }
}
.caret-rightside {
  right: 0;
  &::after {
    right: -10px;
  }
}

.grid-block {
  margin-bottom: $gutter;
  + .grid-block {
    margin-top: -$gutter;
  }
  .callout {
    position: relative;
    margin: 0;
    width: 100%; 
    &:not(.large) {
      min-height:170px;
      @include breakpoint(medium) {
        min-height:300px;
      } 
      @include breakpoint(xlarge) {
        min-height:325px;
        padding: $global-padding * 2;
      } 
    }
  }
  p:not([class]) { 
    margin-bottom: 0.5rem;
  }
   
  .twin-block {
    display: table;
    margin: 0;
    width: 100%; 
    position: relative;
    > .twin-col {
      width: 50%;
      display: table-cell;
      position: relative;
      background-color: inherit;
      background-position: top center;
      background-repeat: no-repeat;
      background-size: cover; 
      background-color: inherit;
      vertical-align: middle;
    }
  } 
  .caret-rightside,
  .caret-leftside  {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
  }
}

@media print {
  .grid-block,
  .mosaic-3 {
    .row,
    .column {
      width: 100% !important;
      height: auto !important;
      min-height: auto !important;
    }
  }
} 
@media print {
  .grid-block,
  .mosaic-3 {
    .row,
    .column {
      width: 100% !important;
      height: auto !important;
      min-height: auto !important;
    }
  }
} 