.media-object { 
  margin-top: 0;
  margin-bottom: 0;
  display: flex;
  flex-wrap: nowrap;
  &.large {
    .media-object-section { 
      &:first-child {
        @include breakpoint(medium){
          padding-right: $gutter * 1.5;
        }
      }
      &:last-child:not(:nth-child(2)) {
        @include breakpoint(medium){
          padding-left: $gutter * 1.5;
        }
      }
    }
  }
  &.stack-for-#{$-zf-zero-breakpoint} {
    @include breakpoint($-zf-zero-breakpoint only) {
      flex-wrap: wrap;
    }
  }
  &.stack-for-#{$-zf-zero-breakpoint} .media-object-section {
    @include breakpoint($-zf-zero-breakpoint only) {
      padding: 0;
      padding-bottom: $mediaobject-section-padding;
      -ms-flex-basis: 100%;
      flex-basis: 100%;
      max-width: 100%;  
      img {
        width: $mediaobject-image-width-stacked;
      }
    }
  }
  .media-object-section {
    display: block;
    flex: 0 1 auto;
    &.main-section {
      @include breakpoint(medium){
        flex: 1 1 0px; // sass-lint:disable-line zero-unit
      }
    }
  }
  &.collapse {
    .media-object-section {
      &:first-child {
        padding-#{$global-right}: 0;
      }
      &:last-child:not(:nth-child(2)) {
        padding-#{$global-left}: 0;
      }  
    }
  }
  &.medium-uncollapse {
    .media-object-section {  
      &:first-child {
        @include breakpoint(medium) {
          padding-#{$global-right}: $gutter;
        }
      }
      &:last-child:not(:nth-child(2)) {
        @include breakpoint(medium) {
          padding-#{$global-left}: $gutter;
        }
      }  
    }
  }
  &.blurb3-leads-image2 {   // such as insights, research pages
    img {
      @include breakpoint (medium) { 
        width: rem-calc(325); 
      }    
      @media screen and (min-width: -zf-bp-to-em(map-get($breakpoints, medium))) and (max-width: -zf-bp-to-em(map-get($breakpoints, medium) + 160px)) {
        width: rem-calc(230); 
      }
      @media screen and (min-width: -zf-bp-to-em(map-get($breakpoints, large))) and (max-width: -zf-bp-to-em(map-get($breakpoints, large) + 150px)) {
        width: rem-calc(230); 
      }
      @media screen and (min-width: -zf-bp-to-em(map-get($breakpoints, large) + 150px)) and (max-width: -zf-bp-to-em(map-get($breakpoints, xlarge))) {
        width: rem-calc(290); 
      } 
      @media print {
        width: rem-calc(110);
      } 
    }
    .callout.large & {  // such as research page feature
      img { 
        @include breakpoint (medium) { 
          width: rem-calc(325 - ($callout-padding * 1.5));         
        }  
        // from medium to 160px past medium
        @media screen and (min-width: -zf-bp-to-em(map-get($breakpoints, medium))) and (max-width: -zf-bp-to-em(map-get($breakpoints, medium) + 160px)) {
          width: rem-calc(230 - ($callout-padding * 1.5)); 
        }
        // from large to 150px past large
        @media screen and (min-width: -zf-bp-to-em(map-get($breakpoints, large))) and (max-width: -zf-bp-to-em(map-get($breakpoints, large) + 150px)) {
          width: rem-calc(230 - ($callout-padding * 1.5)); 
        }
        // from large + 150px to xlarge
        @media screen and (min-width: -zf-bp-to-em(map-get($breakpoints, large) + 150px)) and (max-width: -zf-bp-to-em(map-get($breakpoints, xlarge))) {
          width: rem-calc(290 - ($callout-padding * 1.5)); 
        }   
        @media print {
          width: rem-calc(110);
        }    
      }
    }
  }
  
  &.image1-leads-blurb3 {   // such as our people, our employeees, our communities 
    img:not(.full) { 
      width: rem-calc(210);       
      @media print {
        width: rem-calc(110); 
      } 
    } 
    .callout.large & {
      img { 
        @include breakpoint (medium) { 
          width: rem-calc(210 - ($callout-padding * 1.5)); 
        }
      }
    }
  } 
  .sidebar & {  
    &.image1-leads-blurb2 {  // such as perspectives and blog right rail lists
      img {
        width: rem-calc(130); 
        // from small to 150px before medium
        @media screen and (min-width: -zf-bp-to-em(map-get($breakpoints, small))) and (max-width: -zf-bp-to-em(map-get($breakpoints, medium) - 150px)) {
          width: rem-calc(98);  
        }  
        // from large to 80px past large
        @media screen and (min-width: -zf-bp-to-em(map-get($breakpoints, large))) and (max-width: -zf-bp-to-em(map-get($breakpoints, large) + 80px)) {
          width: rem-calc(98);
        }
        @media print {
          width: 50px; 
        } 
      }
    }
  }
  .section-divided {
    border-bottom: 1px solid darken($light-gray, 5%);
  }
}

